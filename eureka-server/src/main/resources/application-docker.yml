server:
  port: 8761

# Eureka Server, avoid registering itself as a client default true
eureka:
  instance:
    preferIpAddress: true
#    instance.hostname: localhost
  client:
    fetchRegistry: false
    registerWithEureka: false
#    serviceUrl.defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/

logging:
  level:
    com:
      netflix:
        eureka: DEBUG
        discovery: DEBUG
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

spring:
  application:
    name: eureka-server
  output.ansi.enabled: always
  zipkin:
    base-url: http://zipkin:9411

# Trace every action
management.tracing.sampling.probability: 1.0
# traceID and spanId are predefined MDC keys - we want the logs to include them
#logging.pattern.level: %5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]


# All traces should be sent to latency analysis tool
#management.tracing.sampling.probability=1.0
#management.endpoints.web.exposure.include=prometheus
## For Exemplars to work we need histogram buckets
#management.distribution.percentiles-histogram.http.server.request: true
# traceID and spanId are predefined MDC keys - we want the logs to include them
#logging.pattern:
#     level: %5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

#  # Monitoring acuator endpoints
#  # management.endpoints.web.exposure.include=health,metrics
#  management:
#    security:
#      enabled: false