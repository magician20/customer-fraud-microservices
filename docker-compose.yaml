services:
#  so this container will be going to hold all DB for each microservice
# it should be a container for each microservice (unique name for each DB and Volume)
#    postgres-fraud:
#    container_name: postgres-fraud
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: magician
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

    # The zipkin process services the UI, and also exposes a POST endpoint that
    # instrumentation can send trace data to. Scribe is disabled by default.
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
        - "9411:9411"

  rabbitmq:
    image: rabbitmq:3.11.5-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"  # for publish message to queue
      - "15672:15672"  # management port for console

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin: